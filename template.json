{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "S3 VirusScan ( https://cloudonaut.io/s3-virusscan-aws-security/ )",
  "Parameters": {
    "AutoScalingMinSizeParameter": {
      "Description": "Min Size for Auto Scaling",
      "Type": "Number",
      "Default": "1",
      "MinValue": "1"
    },
    "AutoScalingMaxSizeParameter": {
      "Description": "Max Size for Auto Scaling",
      "Type": "Number",
      "Default": "1",
      "MinValue": "1"
    },
    "VPCParameter": {
      "Description": "VPC",
      "Type": "AWS::EC2::VPC::Id"
    },
    "SubnetsParameter": {
      "Description": "A list of subnets (should be either public or using a S3 VPC endpoint)",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "AssignPublicIPParameter": {
      "Description": "Assign a public IP to instances. If this is set to false, ensure your instances have access to the internet through a NAT Host/Gateway.",
      "Type": "String",
      "Default": "true",
      "AllowedValues": ["true", "false"]
    },
    "NATSecurityGroupParameter": {
        "Description": "If AssignPublicIP is set to false, select the security group that your NAT Host or Gateway is in (usually named 'Default'), otherwise the instances won't be able to reach the internet. If AssignPublicIP is set to true, this parameter is ignored.",
        "Type": "AWS::EC2::SecurityGroup::Id",
        "Default": "AWS::NoValue"
    },
    "InstanceTypeParameter": {
      "Description": "Specifies the instance type of the EC2 instance",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": ["t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge"]
    },
    "KeyNameParameter": {
      "Description": "Provide an EC2 key pair if you want to login via SSH",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "DeleteInfectedFilesParameter": {
      "Description": "Automatically delete infected files",
      "Type": "String",
      "Default": "true",
      "AllowedValues": ["true", "false"]
    },
    "BlockDeviceMappingsParameter": {
      "Description": "The size of the volume, in gibibytes (GiBs).",
      "Type": "Number",
      "Default": "8",
      "MinValue": "8",
      "MaxValue": "512"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {"default": "Instance Configuration"},
          "Parameters": ["InstanceTypeParameter", "BlockDeviceMappingsParameter", "KeyNameParameter"]
        },
        {
          "Label": {"default": "Network Configuration"},
          "Parameters": ["VPCParameter", "SubnetsParameter", "AssignPublicIPParameter", "NATSecurityGroupParameter"]
        },
        {
          "Label": {"default": "Auto-scaling Configuration"},
          "Parameters": ["AutoScalingMinSizeParameter", "AutoScalingMaxSizeParameter"]
        },
        {
          "Label": {"default": "ClamAV Configuration"},
          "Parameters": ["DeleteInfectedFilesParameter"]
        }
      ]
    }
  },
  "Conditions": {
    "HasKeyNameParameter": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "KeyNameParameter"}]}]},
    "HasNATHostGateway": {"Fn::And": [{"Fn::Not": [{"Fn::Equals": ["", {"Ref": "NATSecurityGroupParameter"}]}]},{"Fn::Not": [{"Fn::Equals": ["true", {"Ref": "AssignPublicIPParameter"}]}]}]}
  },
  "Mappings": {
    "RegionMap": {
      "ap-south-1": {"AMI": "ami-cacbbea5"},
      "eu-west-1": {"AMI": "ami-d41d58a7"},
      "ap-northeast-2": {"AMI": "ami-a04297ce"},
      "ap-northeast-1": {"AMI": "ami-1a15c77b"},
      "sa-east-1": {"AMI": "ami-b777e4db"},
      "ap-southeast-1": {"AMI": "ami-7243e611"},
      "ap-southeast-2": {"AMI": "ami-55d4e436"},
      "eu-central-1": {"AMI": "ami-0044b96f"},
      "us-east-1": {"AMI": "ami-c481fad3"},
      "us-east-2": {"AMI": "ami-71ca9114"},
      "us-west-1": {"AMI": "ami-de347abe"},
      "us-west-2": {"AMI": "ami-b04e92d0"}
    }
  },
  "Resources": {
    "FindingsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
      }
    },
    "ScanQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "VisibilityTimeout": 300,
        "RedrivePolicy": {
          "deadLetterTargetArn": {"Fn::GetAtt": ["ScanQueueDLQ", "Arn"]},
          "maxReceiveCount": 3
        }
      }
    },
    "ScanQueueFullAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [{"Ref": "ScanScaleUp"}],
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [{
          "Name": "QueueName",
          "Value": {"Fn::GetAtt": ["ScanQueue", "QueueName"]}
        }],
        "EvaluationPeriods": "1",
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Namespace": "AWS/SQS",
        "Period": "60",
        "Statistic": "Sum",
        "Threshold": "100"
      }
    },
    "ScanQueueEmptyAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [{"Ref": "ScanScaleDown"}],
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "Dimensions": [{
          "Name": "QueueName",
          "Value": {"Fn::GetAtt": ["ScanQueue", "QueueName"]}
        }],
        "EvaluationPeriods": "1",
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Namespace": "AWS/SQS",
        "Period": "60",
        "Statistic": "Sum",
        "Threshold": "0"
      }
    },
    "ScanQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "AWS":"*"  
            },
            "Action": [
              "SQS:SendMessage"
            ],
            "Resource": {"Fn::GetAtt": ["ScanQueue", "Arn"]}
          }]
        },
        "Queues": [{"Ref": "ScanQueue"}]
      }
    },
    "ScanQueueDLQ": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600
      }
    },
    "ScanQueueDLQAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm if dead letter queue has messages",
        "Namespace": "AWS/SQS",
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Dimensions": [{
          "Name": "QueueName",
          "Value": {"Fn::GetAtt": ["ScanQueueDLQ", "QueueName"]}
        }],
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [{"Ref": "FindingsTopic"}]
      }
    },
    "ScanAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "DesiredCapacity": {"Ref": "AutoScalingMinSizeParameter"},
        "LaunchConfigurationName": {"Ref": "ScanLaunchConfiguration"},
        "MaxSize": {"Ref": "AutoScalingMaxSizeParameter"},
        "MinSize": {"Ref": "AutoScalingMinSizeParameter"},
        "VPCZoneIdentifier": {"Ref": "SubnetsParameter"},
        "Tags": [{
          "Key": "Name",
          "Value": {"Ref":"AWS::StackName"},
          "PropagateAtLaunch": true
        }]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT20M"
        }
      }
    },
    "ScanScaleUp": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {"Ref": "ScanAutoScalingGroup"},
        "Cooldown": "300",
        "ScalingAdjustment": 1
      }
    },
    "ScanScaleDown": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {"Ref": "ScanAutoScalingGroup"},
        "Cooldown": "300",
        "ScalingAdjustment": -1
      }
    },
    "ScanInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "ScanIAMRole"}]
      }
    },
    "ScanIAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": ["ec2.amazonaws.com"]
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "s3",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "s3:GetObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                "*"
              ]
            }]
          }
        }, {
          "PolicyName": "sqs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage"
              ],
              "Resource": [
                {"Fn::GetAtt": ["ScanQueue", "Arn"]}
              ]
            }]
          }
        }, {
          "PolicyName": "sns",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "sns:Publish"
              ],
              "Resource": [
                {"Ref": "FindingsTopic"}
              ]
            }]
          }
        }, {
          "PolicyName": "logs",
          "PolicyDocument":{
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            }]
          }
        }]
      }
    },
    "ScanLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "clamd": [],
                "clamav": [],
                "clamav-update": [],
                "awslogs": []
              },
              "rubygems": {
                "aws-sdk": ["2.2.29"],
                "daemons": ["1.2.3"],
                "rubysl-securerandom": ["2.0.0"]
              }
            },
            "sources": {
              "/opt": "https://github.com/widdix/aws-s3-virusscan/archive/master.zip"
            },
            "files": {
              "/etc/awslogs/awslogs.conf": {
                "content": {"Fn::Join": ["", [
                  "[general]", "\n",
                  "state_file = /var/lib/awslogs/agent-state", "\n",
                  "\n",
                  "[/var/log/messages]", "\n",
                  "datetime_format = %b %d %H:%M:%S", "\n",
                  "file = /var/log/messages", "\n",
                  "buffer_duration = 5000", "\n",
                  "log_stream_name = {instance_id}", "\n",
                  "initial_position = start_of_file", "\n",
                  "log_group_name = /var/log/messages", "\n",
                  "\n",
                  "[/var/log/secure]", "\n",
                  "datetime_format = %b %d %H:%M:%S", "\n",
                  "file = /var/log/secure", "\n",
                  "buffer_duration = 5000", "\n",
                  "log_stream_name = {instance_id}", "\n",
                  "initial_position = start_of_file", "\n",
                  "log_group_name = /var/log/secure", "\n",
                  "\n",
                  "[/var/log/cron]", "\n",
                  "datetime_format = %b %d %H:%M:%S", "\n",
                  "file = /var/log/cron", "\n",
                  "buffer_duration = 5000", "\n",
                  "log_stream_name = {instance_id}", "\n",
                  "initial_position = start_of_file", "\n",
                  "log_group_name = /var/log/cron", "\n",
                  "\n",
                  "[/var/log/cloud-init.log]", "\n",
                  "datetime_format = %b %d %H:%M:%S", "\n",
                  "file = /var/log/cloud-init.log", "\n",
                  "buffer_duration = 5000", "\n",
                  "log_stream_name = {instance_id}", "\n",
                  "initial_position = start_of_file", "\n",
                  "log_group_name = /var/log/cloud-init.log", "\n",
                  "\n",
                  "[/var/log/cfn-init.log]", "\n",
                  "datetime_format = %Y-%m-%d %H:%M:%S", "\n",
                  "file = /var/log/cfn-init.log", "\n",
                  "buffer_duration = 5000", "\n",
                  "log_stream_name = {instance_id}", "\n",
                  "initial_position = start_of_file", "\n",
                  "log_group_name = /var/log/cfn-init.log", "\n",
                  "\n"
                ]]},
                "mode": "000644",
                "owner": "root",
                "group": "root"
              },
              "/opt/aws-s3-virusscan-master/s3-virusscan.conf": {
                "content": {"Fn::Join": ["", [
                  "delete: ", {"Ref": "DeleteInfectedFilesParameter"}, "\n",
                  "region: ", {"Ref": "AWS::Region"}, "\n",
                  "queue: ", {"Ref": "ScanQueue"}, "\n",
                  "topic: ", {"Ref": "FindingsTopic"}, "\n"
                ]]},
                "mode": "000644",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/cfn-hup.conf": {
                "content": {"Fn::Join": ["", [
                  "[main]", "\n",
                  "stack=", {"Ref": "AWS::StackId"}, "\n",
                  "region=", {"Ref": "AWS::Region"}, "\n"
                ]]},
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {"Fn::Join": ["", [
                  "[cfn-auto-reloader-hook]", "\n",
                  "triggers=post.update", "\n",
                  "path=Resources.ScanLaunchConfiguration.Metadata.AWS::CloudFormation::Init", "\n",
                  "action=/opt/aws/bin/cfn-init --verbose --stack=", {"Ref": "AWS::StackName"}, " --region=", {"Ref": "AWS::Region"}, " --resource=ScanLaunchConfiguration", "\n",
                  "runas=root", "\n"
                ]]}
              },
              "/etc/clamd.conf": {
                "content": {"Fn::Join": ["", [
                  "LocalSocket /var/run/clamd.scan/clamd.sock"
                ]]},
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "a_enable_freshclam_cron": {
                "command": "sed -i 's/FRESHCLAM_DELAY/#FRESHCLAM_DELAY/g' /etc/sysconfig/freshclam"
              },
              "b_enable_freshclam": {
                "command": "sed -i 's/Example/#Example/g' /etc/freshclam.conf"
              },
              "c_enable_clamd_scan": {
                "command": "sed -i 's/Example/#Example/g;s/#LocalSocket /LocalSocket /g' /etc/clamd.d/scan.conf"
              },
              "d_symlink_app_dir": {
                "command": "ln -s /opt/aws-s3-virusscan-master /opt/aws-s3-virusscan",
                "test": "test ! -e /opt/aws-s3-virusscan"
              },
              "e_symlink_app_initd": {
                "command": "ln -s /opt/aws-s3-virusscan/s3-virusscan /etc/init.d/s3-virusscan",
                "test": "test ! -e /etc/init.d/s3-virusscan"
              },
              "f_chmod_app_ruby": {
                "command": "chmod +x *.rb",
                "cwd": "/opt/aws-s3-virusscan"
              },
              "g_chmod_app_initd": {
                "command": "chmod +x s3-virusscan",
                "cwd": "/opt/aws-s3-virusscan"
              },
              "h_chmod_clamd_reload": {
                "command": "chmod +x clamd-reload.sh",
                "cwd": "/opt/aws-s3-virusscan"
              },
              "i_update_clamav_db": {
                "command": "freshclam"
              }
            },
            "services": {
              "sysvinit": {
                "awslogs": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "packages": {
                    "yum": ["awslogs"]
                  },
                  "files": ["/etc/awslogs/awslogs.conf"]
                },
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]
                },
                "s3-virusscan": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": ["/opt/aws-s3-virusscan-master/s3-virusscan.conf"],
                  "sources": ["/opt"]
                },
                "clamd.scan": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "packages": {
                    "yum": ["clamd"]
                  }
                }
              }
            }
          }
        }
      },
      "Properties": {
        "KeyName": {"Fn::If": ["HasKeyNameParameter", {"Ref": "KeyNameParameter"}, {"Ref": "AWS::NoValue"}]},
        "EbsOptimized": false,
        "AssociatePublicIpAddress": { "Ref":"AssignPublicIPParameter" },
        "BlockDeviceMappings": [{
          "DeviceName": "/dev/xvda",
          "Ebs": {
            "VolumeSize": {"Ref": "BlockDeviceMappingsParameter"},
            "VolumeType": "gp2"
          }
        }],
        "IamInstanceProfile": {"Ref": "ScanInstanceProfile"},
        "ImageId": {"Fn::FindInMap": ["RegionMap", {"Ref": "AWS::Region"}, "AMI"]},
        "InstanceType": {"Ref": "InstanceTypeParameter"},
        "SecurityGroups": [{"Ref": "ScanSecurityGroup"},{"Fn::If": ["HasNATHostGateway", {"Ref": "NATSecurityGroupParameter"}, {"Ref":"AWS::NoValue"}]}],
        "UserData": {"Fn::Base64": {"Fn::Join": ["", [
          "#!/bin/bash -x", "\n",
          "/opt/aws/bin/cfn-init --verbose --stack=", {"Ref": "AWS::StackName"}, " --region=", {"Ref": "AWS::Region"}, " --resource=ScanLaunchConfiguration", "\n",
          "/opt/aws/bin/cfn-signal --exit-code=$? --stack=", {"Ref": "AWS::StackName"}, " --region=", {"Ref": "AWS::Region"}, " --resource=ScanAutoScalingGroup", "\n"
        ]]}}
      }
    },
    "ScanSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "S3 VirusScan",
        "SecurityGroupEgress": [{
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
        }],
        "SecurityGroupIngress": [{
          "CidrIp": "0.0.0.0/0",
          "FromPort": 22,
          "IpProtocol": "tcp",
          "ToPort": 22
        }],
        "VpcId": {"Ref": "VPCParameter"}
      }
    }
  }
}
